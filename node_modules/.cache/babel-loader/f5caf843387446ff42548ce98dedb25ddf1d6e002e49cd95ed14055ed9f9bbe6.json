{"ast":null,"code":"// Base interface for common fields\n\n// Interface for items within a package\n\n// Interface for individual items\n\n// Interface for package type items\n\n// Union type for order details\n\n// Type guard to check if an OrderDetail is a PackageType\nexport function isPackageType(detail) {\n  return detail.type === 'package';\n}\n\n// Constants\nexport const INITIAL_PHONE_STATE = {\n  type: '',\n  areaCode: '',\n  prefix: '',\n  lineNumber: ''\n};","map":{"version":3,"names":["isPackageType","detail","type","INITIAL_PHONE_STATE","areaCode","prefix","lineNumber"],"sources":["/Users/mayank.gupta2/Desktop/ReactJsTest/test_app/src/types.ts"],"sourcesContent":["// Base interface for common fields\ninterface BaseItem {\n  id: string;\n  location: 'S1' | 'S2' | '999';\n  quantity: number;\n  vendor: string;\n  sku: string;\n  grade: string;\n  cover: string;\n  description: string;\n}\n\n// Interface for items within a package\nexport interface PackageItem extends BaseItem {}\n\n// Interface for individual items\nexport interface IndividualItem extends BaseItem {\n  type: 'individual';\n  salePrice: number;\n  extendedPrice: number;\n  isAdded: boolean;\n}\n\n// Interface for package type items\nexport interface PackageType extends BaseItem {\n  type: 'package';\n  packageName: string;\n  packageItems: PackageItem[];\n  salePrice: number;\n  extendedPrice: number;\n  isAdded: boolean;\n}\n\n// Union type for order details\nexport type OrderDetail = IndividualItem | PackageType;\n\nexport interface PhoneNumber {\n  type: 'cell' | 'home' | '';\n  areaCode: string;\n  prefix: string;\n  lineNumber: string;\n}\n\nexport interface OrderForm {\n  // Store Selection\n  selectedStore: string;\n  salespersonName: string;\n  \n  // Billing Information\n  billingName: string;\n  billingEmail: string;\n  billingPhones: PhoneNumber[];\n  billingAddress: string;\n  billingCity: string;\n  billingState: string;\n  billingZipCode: string;\n  \n  // Shipping Information\n  shippingName: string;\n  shippingEmail: string;\n  shippingPhones: PhoneNumber[];\n  shippingAddress: string;\n  shippingCity: string;\n  shippingState: string;\n  shippingZipCode: string;\n  \n  // Order Details\n  deliveryType: 'pickup' | 'delivery';\n  orderDetails: OrderDetail[];\n\n  // Other Details\n  deliveryDate: string;\n}\n\nexport interface PhoneErrors {\n  billing?: string[];\n  shipping?: string[];\n}\n\nexport interface EmailErrors {\n  billing?: string;\n  shipping?: string;\n}\n\nexport interface StoreDetails {\n  address: string;\n  phone: string;\n  fax: string;\n}\n\nexport interface StoreMap {\n  [key: string]: StoreDetails;\n}\n\n// Type guard to check if an OrderDetail is a PackageType\nexport function isPackageType(detail: OrderDetail): detail is PackageType {\n  return detail.type === 'package';\n}\n\n// Constants\nexport const INITIAL_PHONE_STATE: PhoneNumber = {\n  type: '',\n  areaCode: '',\n  prefix: '',\n  lineNumber: ''\n}; "],"mappings":"AAAA;;AAYA;;AAGA;;AAQA;;AAUA;;AA6DA;AACA,OAAO,SAASA,aAAaA,CAACC,MAAmB,EAAyB;EACxE,OAAOA,MAAM,CAACC,IAAI,KAAK,SAAS;AAClC;;AAEA;AACA,OAAO,MAAMC,mBAAgC,GAAG;EAC9CD,IAAI,EAAE,EAAE;EACRE,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE,EAAE;EACVC,UAAU,EAAE;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}